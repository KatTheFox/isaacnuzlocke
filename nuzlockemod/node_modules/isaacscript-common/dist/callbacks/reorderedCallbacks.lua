--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
local postGameStartedReordered = require("callbacks.subscriptions.postGameStartedReordered")
local postNewLevelReordered = require("callbacks.subscriptions.postNewLevelReordered")
local postNewRoomReordered = require("callbacks.subscriptions.postNewRoomReordered")
local currentStage, currentStageType, forceNewLevel, forceNewRoom, hasSubscriptions, postGameStartedVanilla, postNewLevelVanilla, postNewRoomVanilla, recordCurrentStage
function hasSubscriptions(self)
    return (postGameStartedReordered:hasSubscriptions() or postNewLevelReordered:hasSubscriptions()) or postNewRoomReordered:hasSubscriptions()
end
function postGameStartedVanilla(self, isContinued)
    if not hasSubscriptions(nil) then
        return
    end
    postGameStartedReordered:fire(isContinued)
    recordCurrentStage(nil)
    postNewLevelReordered:fire()
    postNewRoomReordered:fire()
end
function postNewLevelVanilla(self)
    if not hasSubscriptions(nil) then
        return
    end
    local game = Game()
    local gameFrameCount = game:GetFrameCount()
    if (gameFrameCount == 0) and (not forceNewLevel) then
        return
    end
    forceNewLevel = false
    recordCurrentStage(nil)
    postNewLevelReordered:fire()
    postNewRoomReordered:fire()
end
function postNewRoomVanilla(self)
    if not hasSubscriptions(nil) then
        return
    end
    local game = Game()
    local gameFrameCount = game:GetFrameCount()
    local level = game:GetLevel()
    local stage = level:GetStage()
    local stageType = level:GetStageType()
    if (((gameFrameCount == 0) or (currentStage ~= stage)) or (currentStageType ~= stageType)) and (not forceNewRoom) then
        return
    end
    forceNewRoom = false
    postNewRoomReordered:fire()
end
function recordCurrentStage(self)
    local game = Game()
    local level = game:GetLevel()
    local stage = level:GetStage()
    local stageType = level:GetStageType()
    currentStage = stage
    currentStageType = stageType
end
currentStage = -1
currentStageType = -1
forceNewLevel = false
forceNewRoom = false
function ____exports.init(self, mod)
    mod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, postGameStartedVanilla)
    mod:AddCallback(ModCallbacks.MC_POST_NEW_LEVEL, postNewLevelVanilla)
    mod:AddCallback(ModCallbacks.MC_POST_NEW_ROOM, postNewRoomVanilla)
end
function ____exports.forceNewLevelCallback(self)
    forceNewLevel = true
end
function ____exports.forceNewRoomCallback(self)
    forceNewRoom = true
end
return ____exports
