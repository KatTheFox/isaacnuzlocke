--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
require("lualib_bundle");
local ____exports = {}
local ____main = require("features.saveDataManager.main")
local saveDataManager = ____main.saveDataManager
local postPickupCollect = require("callbacks.subscriptions.postPickupCollect")
local v, hasSubscriptions, postPickupRender
function hasSubscriptions(self)
    return postPickupCollect:hasSubscriptions()
end
function postPickupRender(self, pickup)
    if not hasSubscriptions(nil) then
        return
    end
    local sprite = pickup:GetSprite()
    local animation = sprite:GetAnimation()
    if animation ~= "Collect" then
        return
    end
    local index = GetPtrHash(pickup)
    local fired = v.room.firedMap:get(index)
    if fired == nil then
        v.room.firedMap:set(index, true)
        postPickupCollect:fire(pickup)
    end
end
v = {
    room = {
        firedMap = __TS__New(Map)
    }
}
function ____exports.init(self, mod)
    saveDataManager(nil, "postPickupCollect", v, hasSubscriptions)
    mod:AddCallback(ModCallbacks.MC_POST_PICKUP_RENDER, postPickupRender)
end
return ____exports
