--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
local ____main = require("features.saveDataManager.main")
local saveDataManager = ____main.saveDataManager
local ____flag = require("functions.flag")
local hasFlag = ____flag.hasFlag
local postSacrifice = require("callbacks.subscriptions.postSacrifice")
local v, hasSubscriptions, entityTakeDmgPlayer
function hasSubscriptions(self)
    return postSacrifice:hasSubscriptions()
end
function entityTakeDmgPlayer(self, tookDamage, _damageAmount, damageFlags, _damageSource, _damageCountdownFrames)
    if not hasSubscriptions(nil) then
        return
    end
    local player = tookDamage:ToPlayer()
    if player == nil then
        return
    end
    local game = Game()
    local room = game:GetRoom()
    local roomType = room:GetType()
    local isSpikeDamage = hasFlag(nil, damageFlags, DamageFlag.DAMAGE_SPIKES)
    if (roomType == RoomType.ROOM_SACRIFICE) and isSpikeDamage then
        local ____obj, ____index = v.level, "numSacrifices"
        ____obj[____index] = ____obj[____index] + 1
        postSacrifice:fire(player, v.level.numSacrifices)
    end
end
v = {level = {numSacrifices = 0}}
function ____exports.init(self, mod)
    saveDataManager(nil, "postSacrificeCallback", v, hasSubscriptions)
    mod:AddCallback(ModCallbacks.MC_ENTITY_TAKE_DMG, entityTakeDmgPlayer, EntityType.ENTITY_PLAYER)
end
return ____exports
