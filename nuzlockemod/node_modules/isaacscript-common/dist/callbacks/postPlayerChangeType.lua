--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
require("lualib_bundle");
local ____exports = {}
local ____main = require("features.saveDataManager.main")
local saveDataManager = ____main.saveDataManager
local ____player = require("functions.player")
local getPlayerIndex = ____player.getPlayerIndex
local ____ModCallbacksCustom = require("types.ModCallbacksCustom")
local ModCallbacksCustom = ____ModCallbacksCustom.default
local postPlayerChangeType = require("callbacks.subscriptions.postPlayerChangeType")
local v, hasSubscriptions, postPlayerUpdateReorderedPlayer
function hasSubscriptions(self)
    return postPlayerChangeType:hasSubscriptions()
end
function postPlayerUpdateReorderedPlayer(self, player)
    if not hasSubscriptions(nil) then
        return
    end
    local character = player:GetPlayerType()
    local playerIndex = getPlayerIndex(nil, player)
    local storedCharacter = v.run.characterMap:get(playerIndex)
    if storedCharacter == nil then
        v.run.characterMap:set(playerIndex, character)
        return
    end
    if character ~= storedCharacter then
        v.run.characterMap:set(playerIndex, character)
        postPlayerChangeType:fire(player)
    end
end
v = {
    run = {
        characterMap = __TS__New(Map)
    }
}
function ____exports.init(self, mod)
    saveDataManager(nil, "postPlayerChangeTypeCallback", v, hasSubscriptions)
    mod:AddCallbackCustom(ModCallbacksCustom.MC_POST_PLAYER_UPDATE_REORDERED, postPlayerUpdateReorderedPlayer, 0)
end
return ____exports
