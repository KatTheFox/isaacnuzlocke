--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
do
    local ____reorderedCallbacks = require("callbacks.reorderedCallbacks")
    local forceNewLevelCallback = ____reorderedCallbacks.forceNewLevelCallback
    local forceNewRoomCallback = ____reorderedCallbacks.forceNewRoomCallback
    ____exports.forceNewLevelCallback = forceNewLevelCallback
    ____exports.forceNewRoomCallback = forceNewRoomCallback
end
do
    local ____constants = require("constants")
    local CHARACTERS_WITH_NO_RED_HEARTS = ____constants.CHARACTERS_WITH_NO_RED_HEARTS
    local DISTANCE_OF_GRID_TILE = ____constants.DISTANCE_OF_GRID_TILE
    local DOOR_HITBOX_DISTANCE = ____constants.DOOR_HITBOX_DISTANCE
    local FIRST_GLITCHED_COLLECTIBLE_TYPE = ____constants.FIRST_GLITCHED_COLLECTIBLE_TYPE
    local GENESIS_ROOM_VARIANT = ____constants.GENESIS_ROOM_VARIANT
    local GRID_INDEX_CENTER_OF_1X1_ROOM = ____constants.GRID_INDEX_CENTER_OF_1X1_ROOM
    local MAX_NUM_DOORS = ____constants.MAX_NUM_DOORS
    local MAX_NUM_INPUTS = ____constants.MAX_NUM_INPUTS
    local MAX_PLAYER_POCKET_ITEM_SLOTS = ____constants.MAX_PLAYER_POCKET_ITEM_SLOTS
    local MAX_PLAYER_SPEED_IN_UNITS = ____constants.MAX_PLAYER_SPEED_IN_UNITS
    local MAX_PLAYER_TRINKET_SLOTS = ____constants.MAX_PLAYER_TRINKET_SLOTS
    local MAX_VANILLA_COLLECTIBLE_TYPE = ____constants.MAX_VANILLA_COLLECTIBLE_TYPE
    ____exports.CHARACTERS_WITH_NO_RED_HEARTS = CHARACTERS_WITH_NO_RED_HEARTS
    ____exports.DISTANCE_OF_GRID_TILE = DISTANCE_OF_GRID_TILE
    ____exports.DOOR_HITBOX_DISTANCE = DOOR_HITBOX_DISTANCE
    ____exports.FIRST_GLITCHED_COLLECTIBLE_TYPE = FIRST_GLITCHED_COLLECTIBLE_TYPE
    ____exports.GENESIS_ROOM_VARIANT = GENESIS_ROOM_VARIANT
    ____exports.GRID_INDEX_CENTER_OF_1X1_ROOM = GRID_INDEX_CENTER_OF_1X1_ROOM
    ____exports.MAX_NUM_DOORS = MAX_NUM_DOORS
    ____exports.MAX_NUM_INPUTS = MAX_NUM_INPUTS
    ____exports.MAX_PLAYER_POCKET_ITEM_SLOTS = MAX_PLAYER_POCKET_ITEM_SLOTS
    ____exports.MAX_PLAYER_SPEED_IN_UNITS = MAX_PLAYER_SPEED_IN_UNITS
    ____exports.MAX_PLAYER_TRINKET_SLOTS = MAX_PLAYER_TRINKET_SLOTS
    ____exports.MAX_VANILLA_COLLECTIBLE_TYPE = MAX_VANILLA_COLLECTIBLE_TYPE
end
do
    local ____disableInputs = require("features.disableInputs")
    local disableAllInputs = ____disableInputs.disableAllInputs
    local disableAllInputsExceptFor = ____disableInputs.disableAllInputsExceptFor
    local disableMovementInputs = ____disableInputs.disableMovementInputs
    local disableShootingInputs = ____disableInputs.disableShootingInputs
    local enableAllInputs = ____disableInputs.enableAllInputs
    local enableAllInputsExceptFor = ____disableInputs.enableAllInputsExceptFor
    ____exports.disableAllInputs = disableAllInputs
    ____exports.disableAllInputsExceptFor = disableAllInputsExceptFor
    ____exports.disableMovementInputs = disableMovementInputs
    ____exports.disableShootingInputs = disableShootingInputs
    ____exports.enableAllInputs = enableAllInputs
    ____exports.enableAllInputsExceptFor = enableAllInputsExceptFor
end
do
    local ____forgottenSwitch = require("features.forgottenSwitch")
    local forgottenSwitch = ____forgottenSwitch.forgottenSwitch
    ____exports.forgottenSwitch = forgottenSwitch
end
do
    local ____runInNFrames = require("features.runInNFrames")
    local runInNFrames = ____runInNFrames.runInNFrames
    local runNextFrame = ____runInNFrames.runNextFrame
    ____exports.runInNFrames = runInNFrames
    ____exports.runNextFrame = runNextFrame
end
do
    local ____main = require("features.saveDataManager.main")
    local saveDataManager = ____main.saveDataManager
    local saveDataManagerSave = ____main.saveDataManagerSave
    local saveDataManagerSetGlobal = ____main.saveDataManagerSetGlobal
    ____exports.saveDataManager = saveDataManager
    ____exports.saveDataManagerSave = saveDataManagerSave
    ____exports.saveDataManagerSetGlobal = saveDataManagerSetGlobal
end
do
    local ____export = require("functions.array")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____deepCopy = require("functions.deepCopy")
    local deepCopy = ____deepCopy.deepCopy
    ____exports.deepCopy = deepCopy
end
do
    local ____deepCopyTests = require("functions.deepCopyTests")
    local deepCopyTests = ____deepCopyTests.deepCopyTests
    ____exports.deepCopyTests = deepCopyTests
end
do
    local ____export = require("functions.doors")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.entity")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.flag")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.gridEntity")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.input")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.items")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.json")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.log")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.math")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.player")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.random")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.revive")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.rooms")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.sprite")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.stage")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.tears")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.transformations")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.trinkets")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.ui")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____export = require("functions.util")
    for ____exportKey, ____exportValue in pairs(____export) do
        if ____exportKey ~= "default" then
            ____exports[____exportKey] = ____exportValue
        end
    end
end
do
    local ____transformationMap = require("transformationMap")
    local ITEM_TO_TRANSFORMATION_MAP = ____transformationMap.ITEM_TO_TRANSFORMATION_MAP
    local TRANSFORMATION_TO_ITEMS_MAP = ____transformationMap.TRANSFORMATION_TO_ITEMS_MAP
    local TRANSFORMATION_TO_TAG_MAP = ____transformationMap.TRANSFORMATION_TO_TAG_MAP
    ____exports.ITEM_TO_TRANSFORMATION_MAP = ITEM_TO_TRANSFORMATION_MAP
    ____exports.TRANSFORMATION_TO_ITEMS_MAP = TRANSFORMATION_TO_ITEMS_MAP
    ____exports.TRANSFORMATION_TO_TAG_MAP = TRANSFORMATION_TO_TAG_MAP
end
do
    local ____HealthType = require("types.HealthType")
    local HealthType = ____HealthType.default
    ____exports.HealthType = HealthType
end
do
    local ____ModCallbacksCustom = require("types.ModCallbacksCustom")
    local ModCallbacksCustom = ____ModCallbacksCustom.default
    ____exports.ModCallbacksCustom = ModCallbacksCustom
end
do
    local ____ModUpgraded = require("types.ModUpgraded")
    local ModUpgraded = ____ModUpgraded.default
    ____exports.ModUpgraded = ModUpgraded
end
do
    local ____PocketItemType = require("types.PocketItemType")
    local PocketItemType = ____PocketItemType.default
    ____exports.PocketItemType = PocketItemType
end
do
    local ____upgradeMod = require("upgradeMod")
    local upgradeMod = ____upgradeMod.upgradeMod
    ____exports.upgradeMod = upgradeMod
end
return ____exports
