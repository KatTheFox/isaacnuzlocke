/// <reference types="isaac-typescript-definitions" />
import CallbackParametersCustom from "./CallbackParametersCustom";
/** `isaacscript-common` allows for custom callbacks, so it provides an upgraded Mod object. */
export default class ModUpgraded implements Mod {
    /** We store a copy of the original mod object so that we can re-implement its functions. */
    Mod: Mod;
    /** End-users can optionally enable verbose-mode, which helps troubleshoot crashes. */
    Verbose: boolean;
    AddCallback<T extends keyof CallbackParameters>(callbackID: T, ...args: CallbackParameters[T]): void;
    HasData(): boolean;
    LoadData(): string;
    RemoveCallback(callbackID: ModCallbacks, callback: () => void): void;
    RemoveData(): void;
    SaveData(data: string): void;
    Name: string;
    AddCallbackCustom<T extends keyof CallbackParametersCustom>(callbackID: T, ...args: CallbackParametersCustom[T]): void;
    constructor(mod: Mod, verbose: boolean);
}
