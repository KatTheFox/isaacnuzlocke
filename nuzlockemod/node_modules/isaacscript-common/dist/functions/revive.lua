--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
local ____sprite = require("functions.sprite")
local getFinalFrameOfAnimation = ____sprite.getFinalFrameOfAnimation
local ____trinkets = require("functions.trinkets")
local giveTrinketsBack = ____trinkets.giveTrinketsBack
local temporarilyRemoveTrinkets = ____trinkets.temporarilyRemoveTrinkets
function ____exports.willMysteriousPaperRevive(self, player)
    local game = Game()
    local gameFrameCount = game:GetFrameCount()
    local sprite = player:GetSprite()
    local deathAnimationFrames = getFinalFrameOfAnimation(nil, sprite, "Death")
    local frameOfDeath = (gameFrameCount + deathAnimationFrames) + 1
    return (frameOfDeath % 4) == 3
end
function ____exports.willPlayerRevive(self, player)
    local trinketSituation = temporarilyRemoveTrinkets(nil, player, TrinketType.TRINKET_MYSTERIOUS_PAPER)
    local willRevive = player:WillPlayerRevive() or ((trinketSituation ~= nil) and ____exports.willMysteriousPaperRevive(nil, player))
    giveTrinketsBack(nil, player, trinketSituation)
    return willRevive
end
function ____exports.willReviveFromSpiritShackles(self, player)
    if not player:HasCollectible(CollectibleType.COLLECTIBLE_SPIRIT_SHACKLES) then
        return false
    end
    local effects = player:GetEffects()
    local spiritShacklesEnabled = not effects:HasNullEffect(NullItemID.ID_SPIRIT_SHACKLES_DISABLED)
    local playerInSoulForm = effects:HasNullEffect(NullItemID.ID_SPIRIT_SHACKLES_SOUL)
    return spiritShacklesEnabled and (not playerInSoulForm)
end
return ____exports
