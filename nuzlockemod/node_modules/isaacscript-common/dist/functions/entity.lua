--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
require("lualib_bundle");
local ____exports = {}
function ____exports.getBosses(self)
    local bosses = {}
    for ____, npc in ipairs(
        ____exports.getNPCs(nil)
    ) do
        if npc:IsBoss() then
            __TS__ArrayPush(bosses, npc)
        end
    end
    return bosses
end
function ____exports.getNPCs(self)
    local npcs = {}
    for ____, entity in ipairs(
        Isaac.GetRoomEntities()
    ) do
        local npc = entity:ToNPC()
        if npc ~= nil then
            __TS__ArrayPush(npcs, npc)
        end
    end
    return npcs
end
local GLITCHED_ITEM_THRESHOLD = 4000000000
function ____exports.anyEntityCloserThan(self, entities, position, distance)
    for ____, entity in ipairs(entities) do
        if position:Distance(entity.Position) <= distance then
            return true
        end
    end
    return false
end
function ____exports.getAliveBosses(self)
    local aliveBosses = {}
    for ____, boss in ipairs(
        ____exports.getBosses(nil)
    ) do
        if not boss:IsDead() then
            __TS__ArrayPush(aliveBosses, boss)
        end
    end
    return aliveBosses
end
function ____exports.isGlitchedCollectible(self, entity)
    return ((entity.Type == EntityType.ENTITY_PICKUP) and (entity.Variant == PickupVariant.PICKUP_COLLECTIBLE)) and (entity.SubType > GLITCHED_ITEM_THRESHOLD)
end
function ____exports.removeAllEntities(self, entities)
    for ____, entity in ipairs(entities) do
        entity:Remove()
    end
end
function ____exports.removeAllMatchingEntities(self, entityType, entityVariant, entitySubType)
    if entityVariant == nil then
        entityVariant = -1
    end
    if entitySubType == nil then
        entitySubType = -1
    end
    local entities = Isaac.FindByType(entityType, entityVariant, entitySubType)
    ____exports.removeAllEntities(nil, entities)
end
return ____exports
