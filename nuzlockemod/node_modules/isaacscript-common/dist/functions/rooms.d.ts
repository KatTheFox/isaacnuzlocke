/// <reference types="isaac-typescript-definitions" />
/**
 * Helper function for quickly switching to a new room without playing a particular animation.
 * Always use this helper function over invoking `Game().ChangeRoom()` directly to ensure that you
 * do not forget to set the LeaveDoor property.
 */
export declare function changeRoom(roomIndex: int): void;
export declare function getCurrentDimension(): Dimension | null;
export declare function getRoomData(): RoomConfig | null;
/**
 * Helper function to get the type for the room from the XML/STB data. The room data type will
 * correspond to different things depending on what XML/STB file it draws from. For example, in the
 * "00.special rooms.stb" file, a room type of 2 corresponds to a shop, a room type of 3 corresponds
 * to an I AM ERROR room, and so on.
 *
 * @returns The room data type. Returns -1 if the type was not found.
 */
export declare function getRoomDataType(): int;
/**
 * Helper function to get the room index of the current room. Use this instead of calling
 * `Game().GetLevel().GetCurrentRoomIndex()` directly to avoid bugs with big rooms.
 * (Big rooms will return the specific 1x1 quadrant that the player entered the room at,
 * which can break data structures that use the room index as an index.)
 */
export declare function getRoomIndex(): int;
/**
 * Helper function to get the stage ID for the room from the XML/STB data. The room stage ID will
 * correspond to the first number in the filename of the XML/STB file. For example, a Depths room
 * would have a stage ID of 7. (Use the `StageID` enum for comparison.)
 *
 * @returns The room stage ID. Returns -1 if the stage ID was not found.
 */
export declare function getRoomStageID(): int;
/**
 * Helper function to get the subtype for the room from the XML/STB data. The room subtype will
 * correspond to different things depending on what XML/STB file it draws from. For example, in the
 * "00.special rooms.stb" file, an Angel Room with a subtype of 0 will correspond to a normal Angel
 * Room and a subtype of 1 will correspond to an Angel Room shop for The Stairway.
 *
 * @returns The room subtype. Returns -1 if the subtype was not found.
 */
export declare function getRoomSubType(): int;
/**
 * Helper function to get the variant for the current room from the XML/STB data. You can think of a
 * room variant as its identifier. For example, to go to Basement room #123, you would use a console
 * command of `goto d.123` while on the Basement.
 *
 * @returns The room variant. Returns -1 if the variant was not found.
 */
export declare function getRoomVariant(): int;
/**
 * Converts a room X and Y coordinate to a position. For example, the coordinates of 0, 0 are
 * equal to `Vector(80, 160)`.
 */
export declare function gridToPos(x: int, y: int): Vector;
export declare function in2x1Room(): boolean;
export declare function inAngelShop(): boolean;
export declare function inBeastRoom(): boolean;
/**
 * Helper function for determining whether the current room is a crawlspace. Use this function over
 * comparing to `GridRooms.ROOM_DUNGEON_IDX` directly since there is a special case of the player
 * being in The Beast room.
 */
export declare function inCrawlspace(): boolean;
export declare function inLRoom(): boolean;
export declare function inGenesisRoom(): boolean;
