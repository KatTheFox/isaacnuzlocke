--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
local ____constants = require("constants")
local GENESIS_ROOM_VARIANT = ____constants.GENESIS_ROOM_VARIANT
function ____exports.getRoomIndex(self)
    local game = Game()
    local level = game:GetLevel()
    local roomIndex = level:GetCurrentRoomIndex()
    if roomIndex < 0 then
        return roomIndex
    end
    local roomDesc = level:GetCurrentRoomDesc()
    return roomDesc.SafeGridIndex
end
function ____exports.changeRoom(self, roomIndex)
    local game = Game()
    local level = game:GetLevel()
    level.LeaveDoor = -1
    game:ChangeRoom(roomIndex)
end
function ____exports.getCurrentDimension(self)
    local game = Game()
    local level = game:GetLevel()
    local roomIndex = ____exports.getRoomIndex(nil)
    local currentRoomDesc = level:GetCurrentRoomDesc()
    local currentRoomHash = GetPtrHash(currentRoomDesc)
    do
        local dimension = 0
        while dimension <= 2 do
            local dimensionRoomDesc = level:GetRoomByIdx(roomIndex, dimension)
            local dimensionRoomHash = GetPtrHash(dimensionRoomDesc)
            if dimensionRoomHash == currentRoomHash then
                return dimension
            end
            dimension = dimension + 1
        end
    end
    return nil
end
function ____exports.getRoomData(self)
    local game = Game()
    local level = game:GetLevel()
    local roomIndex = ____exports.getRoomIndex(nil)
    local roomDesc = level:GetRoomByIdx(roomIndex)
    return roomDesc.Data
end
function ____exports.getRoomDataType(self)
    local roomData = ____exports.getRoomData(nil)
    if roomData == nil then
        return -1
    end
    return roomData.Type
end
function ____exports.getRoomStageID(self)
    local roomData = ____exports.getRoomData(nil)
    if roomData == nil then
        return -1
    end
    return roomData.StageID
end
function ____exports.getRoomSubType(self)
    local roomData = ____exports.getRoomData(nil)
    if roomData == nil then
        return -1
    end
    return roomData.Subtype
end
function ____exports.getRoomVariant(self)
    local roomData = ____exports.getRoomData(nil)
    if roomData == nil then
        return -1
    end
    return roomData.Variant
end
function ____exports.gridToPos(self, x, y)
    local game = Game()
    local room = game:GetRoom()
    x = x + 1
    y = y + 1
    local gridIndex = (y * room:GetGridWidth()) + x
    return room:GetGridPosition(gridIndex)
end
function ____exports.in2x1Room(self)
    local game = Game()
    local room = game:GetRoom()
    local roomShape = room:GetRoomShape()
    return (roomShape == RoomShape.ROOMSHAPE_1x2) or (roomShape == RoomShape.ROOMSHAPE_2x1)
end
function ____exports.inAngelShop(self)
    local game = Game()
    local room = game:GetRoom()
    local roomType = room:GetType()
    local roomSubType = ____exports.getRoomSubType(nil)
    return (roomType == RoomType.ROOM_ANGEL) and (roomSubType == 1)
end
function ____exports.inBeastRoom(self)
    local roomIndex = ____exports.getRoomIndex(nil)
    local roomSubType = ____exports.getRoomSubType(nil)
    return (roomIndex == GridRooms.ROOM_DUNGEON_IDX) and (roomSubType == 4)
end
function ____exports.inCrawlspace(self)
    local roomIndex = ____exports.getRoomIndex(nil)
    local roomSubType = ____exports.getRoomSubType(nil)
    return (roomIndex == GridRooms.ROOM_DUNGEON_IDX) and (roomSubType ~= 4)
end
function ____exports.inLRoom(self)
    local game = Game()
    local room = game:GetRoom()
    local roomShape = room:GetRoomShape()
    return (((roomShape == RoomShape.ROOMSHAPE_LTL) or (roomShape == RoomShape.ROOMSHAPE_LTR)) or (roomShape == RoomShape.ROOMSHAPE_LBL)) or (roomShape == RoomShape.ROOMSHAPE_LBR)
end
function ____exports.inGenesisRoom(self)
    local game = Game()
    local room = game:GetRoom()
    local roomType = room:GetType()
    local roomVariant = ____exports.getRoomVariant(nil)
    return (roomType == RoomType.ROOM_ISAACS) or (roomVariant == GENESIS_ROOM_VARIANT)
end
return ____exports
