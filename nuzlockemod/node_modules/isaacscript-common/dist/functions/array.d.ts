/// <reference types="isaac-typescript-definitions" />
/// <reference types="typescript-to-lua/language-extensions" />
/** Helper function for determining if two arrays contain the exact same elements. */
export declare function arrayEquals<T>(array1: T[], array2: T[]): boolean;
export declare function arrayEmpty<T>(array: T[]): void;
export declare function arraySum(array: int[]): int;
export declare function arrayInArray<T>(arrayToMatch: T[], parentArray: T[][]): boolean;
export declare function arrayToString<T>(array: T[]): string;
export declare function getRandomArrayElement<T>(array: T[], seed: int): T;
/** Copies and removes the specified element from the array. Returns the copied array. */
export declare function arrayRemove<T>(array: T[], element: T): T[];
/**
 * Initializes an array with all elements containing the specified default value.
 *
 * Example:
 * ```
 * const playerTransformations = initArray(false, PlayerForm.NUM_PLAYER_FORMS - 1);
 * ```
 */
export declare function initArray<T>(defaultValue: T, size: int): T[];
/**
 * Since Lua uses tables for every non-primitive data structure, it is non-trivial to determine if a
 * particular table is being used as an array. isArray returns true if:
 *
 * - the table contains all numerical indexes that are contiguous, starting at 1
 * - the table has no keys (i.e. an "empty" table)
 */
export declare function isArray(table: LuaTable): boolean;
