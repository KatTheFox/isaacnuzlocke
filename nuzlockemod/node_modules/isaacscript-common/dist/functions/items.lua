--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
function ____exports.collectibleHasTag(self, collectibleType, tag)
    local itemConfig = Isaac.GetItemConfig()
    local itemConfigItem = itemConfig:GetCollectible(collectibleType)
    if itemConfigItem == nil then
        return false
    end
    return itemConfigItem:HasTags(tag)
end
function ____exports.getCollectibleInitCharges(self, collectibleType)
    local itemConfig = Isaac.GetItemConfig()
    local itemConfigItem = itemConfig:GetCollectible(collectibleType)
    if itemConfigItem == nil then
        return 0
    end
    return itemConfigItem.InitCharge
end
function ____exports.getCollectibleMaxCharges(self, collectibleType)
    local itemConfig = Isaac.GetItemConfig()
    local itemConfigItem = itemConfig:GetCollectible(collectibleType)
    if itemConfigItem == nil then
        return 0
    end
    return itemConfigItem.MaxCharges
end
function ____exports.getItemName(self, collectibleOrTrinketType, trinket)
    if trinket == nil then
        trinket = false
    end
    local itemConfig = Isaac.GetItemConfig()
    local defaultName = "Unknown"
    if type(collectibleOrTrinketType) ~= "number" then
        return defaultName
    end
    local itemConfigItem = ((trinket and (function() return itemConfig:GetTrinket(collectibleOrTrinketType) end)) or (function() return itemConfig:GetCollectible(collectibleOrTrinketType) end))()
    if itemConfigItem == nil then
        return defaultName
    end
    return itemConfigItem.Name
end
function ____exports.getMaxCollectibleID(self)
    local itemConfig = Isaac.GetItemConfig()
    return itemConfig:GetCollectibles().Size - 1
end
function ____exports.isQuestItem(self, collectibleType)
    return ____exports.collectibleHasTag(nil, collectibleType, 32768)
end
function ____exports.removeItemFromItemTracker(self, collectibleType)
    local itemName = ____exports.getItemName(nil, collectibleType)
    Isaac.DebugString(
        ((("Removing voided collectible " .. tostring(collectibleType)) .. " (") .. itemName) .. ") from player 0 (Player)"
    )
end
return ____exports
