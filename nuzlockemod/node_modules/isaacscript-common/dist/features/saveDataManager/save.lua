--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
local ____exports = {}
local ____deepCopy = require("functions.deepCopy")
local deepCopy = ____deepCopy.deepCopy
local SerializationType = ____deepCopy.SerializationType
local ____json = require("functions.json")
local jsonEncode = ____json.jsonEncode
local ____log = require("functions.log")
local log = ____log.log
local getAllSaveDataToWriteToDisk
function getAllSaveDataToWriteToDisk(self, saveDataMap, saveDataConditionalFuncMap)
    local allSaveData = {}
    for subscriberName, saveData in pairs(saveDataMap) do
        do
            if saveData.dontSave ~= nil then
                goto __continue4
            end
            local conditionalFunc = saveDataConditionalFuncMap:get(subscriberName)
            if conditionalFunc ~= nil then
                local shouldSave = conditionalFunc(nil)
                if not shouldSave then
                    goto __continue4
                end
            end
            local saveDataWithoutRoom = {persistent = saveData.persistent, run = saveData.run, level = saveData.level}
            local saveDataCopy = deepCopy(nil, saveDataWithoutRoom, SerializationType.SERIALIZE, subscriberName)
            allSaveData[subscriberName] = saveDataCopy
        end
        ::__continue4::
    end
    return allSaveData
end
function ____exports.saveToDisk(self, mod, saveDataMap, saveDataConditionalFuncMap)
    local allSaveData = getAllSaveDataToWriteToDisk(nil, saveDataMap, saveDataConditionalFuncMap)
    local jsonString = jsonEncode(nil, allSaveData)
    mod:SaveData(jsonString)
    log(nil, "The save data manager wrote data to the \"save#.dat\" file.")
end
return ____exports
