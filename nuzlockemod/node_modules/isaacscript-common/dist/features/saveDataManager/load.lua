--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
require("lualib_bundle");
local ____exports = {}
local ____debug = require("debug")
local DEBUG = ____debug.DEBUG
local ____json = require("functions.json")
local jsonDecode = ____json.jsonDecode
local ____log = require("functions.log")
local log = ____log.log
local ____merge = require("features.saveDataManager.merge")
local merge = ____merge.merge
local DEFAULT_MOD_DATA, readSaveDatFile, tryLoadModData
function readSaveDatFile(self, mod)
    local isaacFrameCount = Isaac.GetFrameCount()
    local ok, jsonStringOrErrMsg = pcall(tryLoadModData, mod)
    if not ok then
        log(
            nil,
            (("Failed to read from the \"save#.dat\" file on Isaac frame " .. tostring(isaacFrameCount)) .. ": ") .. jsonStringOrErrMsg
        )
        return DEFAULT_MOD_DATA
    end
    local jsonStringTrimmed = __TS__StringTrim(jsonStringOrErrMsg)
    if jsonStringTrimmed == "" then
        return DEFAULT_MOD_DATA
    end
    return jsonStringTrimmed
end
function tryLoadModData(mod)
    return mod:LoadData()
end
DEFAULT_MOD_DATA = "{}"
function ____exports.loadFromDisk(self, mod, oldSaveData)
    if not mod:HasData() then
        return
    end
    local jsonString = readSaveDatFile(nil, mod)
    if jsonString == nil then
        return
    end
    local newSaveData = jsonDecode(nil, jsonString)
    if DEBUG then
        log(nil, "Converted data from the \"save#.dat\" to a Lua table.")
    end
    for key, value in pairs(newSaveData) do
        do
            local keyType = type(key)
            if keyType ~= "string" then
                goto __continue6
            end
            local valueType = type(value)
            if valueType ~= "table" then
                goto __continue6
            end
            local oldSaveDataForSubscriber = oldSaveData[key]
            if oldSaveDataForSubscriber == nil then
                goto __continue6
            end
            if DEBUG then
                log(
                    nil,
                    "Merging in stored data for feature: " .. tostring(key)
                )
            end
            merge(nil, oldSaveDataForSubscriber, value, key)
        end
        ::__continue6::
    end
    log(nil, "The save data manager loaded data from the \"save#.dat\" file.")
end
return ____exports
