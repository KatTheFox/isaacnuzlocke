--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]
require("lualib_bundle");
local ____exports = {}
local ____errors = require("errors")
local getUpgradeErrorMsg = ____errors.getUpgradeErrorMsg
local ____main = require("features.saveDataManager.main")
local saveDataManager = ____main.saveDataManager
local FEATURE_NAME, initialized, v, postUpdate
function postUpdate(self)
    local game = Game()
    local gameFrameCount = game:GetFrameCount()
    local functionsToFire = {}
    local indexesToRemove = {}
    do
        local i = 0
        while i < #v.run.queuedFunctionTuples do
            local functionTuple = v.run.queuedFunctionTuples[i + 1]
            local frame, func = table.unpack(functionTuple)
            if gameFrameCount >= frame then
                __TS__ArrayPush(functionsToFire, func)
                __TS__ArrayPush(indexesToRemove, i)
            end
            i = i + 1
        end
    end
    for ____, indexToRemove in ipairs(indexesToRemove) do
        __TS__ArraySplice(v.run.queuedFunctionTuples, indexToRemove, 1)
    end
    for ____, func in ipairs(functionsToFire) do
        func(nil)
    end
end
function ____exports.runInNFrames(self, frames, func)
    if not initialized then
        local msg = getUpgradeErrorMsg(nil, FEATURE_NAME)
        error(msg)
    end
    local game = Game()
    local gameFrameCount = game:GetFrameCount()
    local functionFireFrame = gameFrameCount + frames
    local tuple = {functionFireFrame, func}
    __TS__ArrayPush(v.run.queuedFunctionTuples, tuple)
end
FEATURE_NAME = "run in N frames"
initialized = false
v = {dontSave = true, run = {queuedFunctionTuples = {}}}
function ____exports.init(self, mod)
    initialized = true
    saveDataManager(nil, "runInNFrames", v)
    mod:AddCallback(ModCallbacks.MC_POST_UPDATE, postUpdate)
end
function ____exports.runNextFrame(self, func)
    if not initialized then
        local msg = getUpgradeErrorMsg(nil, FEATURE_NAME)
        error(msg)
    end
    ____exports.runInNFrames(nil, 1, func)
end
return ____exports
