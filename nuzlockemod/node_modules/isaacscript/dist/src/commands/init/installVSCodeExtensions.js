"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const JSONC = __importStar(require("jsonc-parser"));
const path_1 = __importDefault(require("path"));
const file = __importStar(require("../../file"));
const misc_1 = require("../../misc");
function installVSCodeExtensions(projectPath) {
    const extensions = getExtensionsFromJSON(projectPath);
    for (const extensionName of extensions) {
        misc_1.execShell("code", ["--install-extension", extensionName]);
    }
}
exports.default = installVSCodeExtensions;
function getExtensionsFromJSON(projectPath) {
    const extensionsJSONPath = path_1.default.join(projectPath, ".vscode", "extensions.json");
    if (!file.exists(extensionsJSONPath)) {
        return [];
    }
    const extensionsJSONRaw = file.read(extensionsJSONPath);
    let extensionsJSON;
    try {
        extensionsJSON = JSONC.parse(extensionsJSONRaw);
    }
    catch (err) {
        misc_1.error(`Failed to parse the "${chalk_1.default.green(extensionsJSONPath)}" file:`, err);
    }
    return extensionsJSON.recommendations;
}
//# sourceMappingURL=installVSCodeExtensions.js.map