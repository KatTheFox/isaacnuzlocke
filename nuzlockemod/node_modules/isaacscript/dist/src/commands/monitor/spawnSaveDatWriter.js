"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendMsgToSaveDatWriter = exports.spawnSaveDatWriter = void 0;
const child_process_1 = require("child_process");
const path_1 = __importDefault(require("path"));
const constants_1 = require("../../constants");
const misc_1 = require("../../misc");
let saveDatWriter = null;
function spawnSaveDatWriter(config) {
    const processName = "saveDatWriter";
    const processDescription = "Save.dat writer";
    const processPath = path_1.default.join(__dirname, processName, processName);
    const modsDataPath = path_1.default.join(config.modsDirectory, "..", "data");
    const watcherModDataPath = path_1.default.join(modsDataPath, constants_1.WATCHER_MOD_NAME);
    const saveDatFileName = `save${config.saveSlot}.dat`;
    const saveDatPath = path_1.default.join(watcherModDataPath, saveDatFileName);
    saveDatWriter = child_process_1.fork(processPath, [saveDatPath], {
        stdio: ["pipe", "pipe", "pipe", "ipc"],
    });
    saveDatWriter.on("close", (code) => {
        misc_1.error(`Error: ${processDescription} subprocess closed with code: ${code}`);
    });
    saveDatWriter.on("exit", (code) => {
        misc_1.error(`Error: ${processDescription} subprocess exited with code: ${code}`);
    });
}
exports.spawnSaveDatWriter = spawnSaveDatWriter;
function sendMsgToSaveDatWriter(msg) {
    if (saveDatWriter !== null) {
        saveDatWriter.send(msg);
    }
}
exports.sendMsgToSaveDatWriter = sendMsgToSaveDatWriter;
//# sourceMappingURL=spawnSaveDatWriter.js.map