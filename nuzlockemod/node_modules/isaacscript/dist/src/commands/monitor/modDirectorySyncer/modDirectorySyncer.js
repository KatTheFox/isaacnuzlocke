"use strict";
/* eslint-disable import/no-unused-modules */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const sync_directory2_1 = __importDefault(require("sync-directory2"));
const constants_1 = require("../../../constants");
let modSourcePath;
let modTargetPath;
let timeInvoked;
init();
function init() {
    const numArgs = 2;
    if (process.argv.length !== 2 + numArgs) {
        throw new Error("The directory syncer process did not get the right amount of arguments.");
    }
    modSourcePath = process.argv[2];
    modTargetPath = process.argv[3];
    timeInvoked = new Date();
    sync_directory2_1.default(modSourcePath, modTargetPath, {
        watch: true,
        type: "copy",
        afterSync,
        onError,
    });
}
function afterSync(params) {
    const secondsPassed = (new Date().getTime() - timeInvoked.getTime()) / 1000;
    if (secondsPassed > 1) {
        send(`${constants_1.FILE_SYNCED_MESSAGE} ${params.relativePath}`);
    }
}
function onError(err) {
    console.error("The directory syncer encountered an error:", err);
}
function send(msg) {
    if (typeof process.send === "function") {
        process.send(msg);
    }
}
//# sourceMappingURL=modDirectorySyncer.js.map